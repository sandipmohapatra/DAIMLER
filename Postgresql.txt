Go to the Official website (https://www.postgresql.org/) of PostgreSQL and click on the Download
---------------------------------------------------------------------------------------------------------To create table
Create table department  
( dept_no int constraint dept_details_pk primary key , dept_name text NOT NULL,Location varchar(15));  
------------------------------------------------------------------------------------------------
To insert Data
insert into department values(103,'purchase','Pune');
-------------------------------------------------------------------------------------------------
To view the data
select * from department;
-------------------------------------------------------------------------------------------------
To update the record
update employee set location='pune' where emp_no=101;
---------------------------------------------------------------------------------------------------
To add a column
alter table employee add column phone_no int;

update employee set phone_no=8897 where emp_no=102;
----------------------------------------------------------------------------------------------------
To drop a column

ALTER TABLE employee DROP COLUMN phone_no;  
--------------------------------------------------------------------------------------------
To delete a row
delete from employee where emp_no=101;
-------------------------------------------------------------------------------
To display the data in ascending or descending order

SELECT emp_name FROM employee  ORDER BY emp_name ASC;  

SELECT emp_name FROM employee  ORDER BY emp_name desc;  
------------------------------------------------------------------------------------------------
Create a table

CREATE TABLE Student_information(  
Stud_id serial PRIMARY KEY,  
Stud_name TEXT NOT NULL,Stud_age int,Stud_address char(30));  
----------------------------------------------------------------------------------------
Inserting 3 rows at a time
----------------------------------------------------------------------
INSERT INTO Student_information (  
Stud_name, Stud_age,Stud_address)  
VALUES('Mike','26','New york' ),  
 ('Emily','23','Boston'),  
 ('john','25','Chicago');  
-------------------------------------------------------------------------------------------------
select * from student_information;
---------------------------------------------------------------------
ALTER TABLE Student_information   
ALTER COLUMN Stud_age TYPE VARCHAR,  
ALTER COLUMN Stud_address TYPE VARCHAR;  
-------------------------------------------------------------------------------
To rename column

ALTER TABLE Student_information  
RENAME stud_name TO student_name; 
---------------------------------Primary key and Foreign Key-----------------------
CREATE TABLE Students (  
St_id serial PRIMARY KEY,  
St_name VARCHAR NOT NULL,  
St_email VARCHAR,  
St_phone_no VARCHAR NOT NULL,  
 St_group_id INT,  
FOREIGN KEY (st_group_id) REFERENCES Student_groups (Stu_id)  
);  
---------------------------------------------------------------------------------------
CREATE TABLE Student_groups (  
    Stu_id serial PRIMARY KEY,  
    Stu_name VARCHAR NOT NULL  
);  
-----------------------------------------------------------------------
PostgreSQL CREATE TYPE Command
----------------------------------------------------------------
The PostgreSQL CREATE TYPE command provides us to make a composite type that can be used as the return type of a function.

CREATE TYPE Item_details AS (  
    item_id INT,  
    item_name VARCHAR,  
    item_price Numeric(5,2)  
);  
--------------------------------------------------------------------------------------------
CREATE OR REPLACE FUNCTION get_Item_details (I_id INT)   
    RETURNS Item_details AS   
$$   
SELECT item_id, item_name,  item_price   
FROM items  
WHERE item_id = I_id ;   
$$   
LANGUAGE SQL;  
----------------------------------------------------------------------------------------------
create table items (item_id int, item_name varchar,  item_price Numeric(9,2))

insert into items values(101,'TV',25000.00)

SELECT * FROM get_Item_details(101);  
----------------------------------------------------------------------------------------------
smallint---stores whole numbers, small range.---2 bytes
integer---stores whole numbers.---	4 bytes
bigint---stores whole numbers, large range.---8 bytes